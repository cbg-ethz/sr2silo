name: Docker Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        run: |
          echo SAMPLE_ID=sample_id >> .github/docker-build-test.env
          echo BATCH_ID=batch_id >> .github/docker-build-test.env
          echo TIMELINE_FILE=timeline_file >> .github/docker-build-test.env
          echo PRIMER_FILE=primer_file >> .github/docker-build-test.env
          echo INPUT_FILE=input_file >> .github/docker-build-test.env
          echo OUTPUT_FP=output_fp >> .github/docker-build-test.env
          echo DATABASE_CONFIG=database_config >> .github/docker-build-test.env
          echo REFERENCE=reference >> .github/docker-build-test.env

      - name: Build Docker image
        run: docker-compose --env-file .github/docker-build-test.env build

      - name: Push to DockerHub
        if: github.ref == 'refs/heads/main'
        run: |
          docker-compose --env-file .github/docker-build-test.env push

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Create .env file
        run: |
          echo SAMPLE_ID=sample_id >> .github/docker-build-test.env
          echo BATCH_ID=batch_id >> .github/docker-build-test.env
          echo TIMELINE_FILE=timeline_file >> .github/docker-build-test.env
          echo PRIMER_FILE=primer_file >> .github/docker-build-test.env
          echo INPUT_FILE=input_file >> .github/docker-build-test.env
          echo OUTPUT_FP=output_fp >> .github/docker-build-test.env
          echo DATABASE_CONFIG=database_config >> .github/docker-build-test.env
          echo REFERENCE=reference >> .github/docker-build-test.env

      - name: Create Docker secrets files
        run: |
          mkdir -p ./secrets
          echo "${{ secrets.AWS_ACCESS_KEY_ID }}" > ./secrets/aws_access_key_id.txt
          echo "${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ./secrets/aws_secret_access_key.txt
          echo "${{ secrets.AWS_DEFAULT_REGION }}" > ./secrets/aws_default_region.txt

      - name: Build and Test
        env:
          CI: true
        run: |
          docker-compose --env-file .github/docker-build-test.env up --build --abort-on-container-exit|| exit_code=$?

          if [ "$exit_code" -ne 0 ]; then
            echo "Docker Compose exited with code $exit_code"
            exit $exit_code
