# This pipeline checks whether the package
# installs properly, passes unit tests and whether
# the code formatting is right.
name: CI/CD (Poetry + Conda)

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Run black formatting check
        uses: psf/black@stable

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          channels: conda-forge, bioconda
          environment-file: environments/dev-environment.yml
          activate-environment: sr2silo-dev

      - name: Install Poetry and dependencies
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate sr2silo-dev
          poetry install --with dev

      - name: Determine if PR
        id: determine-pr
        run: echo "is_pr=${{ github.event_name == 'pull_request' }}" >> $GITHUB_OUTPUT

      - name: Run unit tests
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate sr2silo-dev
          poetry run pytest

      - name: Run test coverage
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate sr2silo-dev
          if [ "${{ steps.determine-pr.outputs.is_pr }}" == 'true' ]; then
            echo "Running coverage on changed files"
            changed_files=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep '^src/' | tr '\n' ' ')
            if [ -z "$changed_files" ]; then
              echo "No changed files to run coverage on"
              exit 0
            fi
            poetry run pytest --cov=$changed_files --cov-report=term
          else
            echo "Running coverage on all files"
            poetry run pytest --cov=src --cov-report=term
          fi

     - name: Generate coverage badge
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate sr2silo-dev
          poetry run genbadge coverage -o ./reports/coverage/coverage.svg

      - name: Run Ruff
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate sr2silo-dev
          poetry run ruff check .

      - name: Run interrogate
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate sr2silo-dev
          poetry run interrogate src

      - name: Run Pyright
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate sr2silo-dev
          poetry run pyright
